function getMatchingFlights(e){return flights.filter(function(t){return t.origin===e.origin&&t.destination===e.destination})}var express=require("express"),http=require("http"),airports=require("./data/airports.json"),flights=require("./data/flights.json"),reservations=[];for(var i=0;i<flights.length;i++){flights[i].originFullName=airports[flights[i].origin].name;flights[i].destinationFullName=airports[flights[i].destination].name}var app=express().use(express.bodyParser()).use(express.static("public"));app.get("/airports",function(e,t){t.json(airports)});app.get("/airports/:airport",function(e,t){typeof airports[e.params.airport]=="undefined"?t.json(404,{status:"not found - invalid airport code"}):t.json(airports[e.params.airport])});app.get("/flights",function(e,t){t.json(flights)});app.get("/flights/:origin",function(e,t){var n=flights.filter(function(t){return t.origin===e.params.origin});t.json(n)});app.get("/flights/:origin/:destination",function(e,t){var n=getMatchingFlights(e.params);t.json(n)});app.get("/reservations",function(e,t){t.json(reservations)});app.post("/reservations",function(e,t){var n=getMatchingFlights(e.body);if(n.length){reservations.push(n[0]);t.json(n[0])}else t.status(404).end()});app.get("/*",function(e,t){t.json(404,{status:"not found"})});http.createServer(app).listen(3e3,function(){console.log("Server ready at http://localhost:3000")});